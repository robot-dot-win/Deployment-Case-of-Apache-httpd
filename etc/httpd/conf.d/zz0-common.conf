# httpd通用全局配置文件，2024-07-04
#
# 版权所有：Copyright (C) 2024, Martin Young <martin_young@live.cn>
#
# 功能说明：为Apache httpd服务设置全局参数。当某个VirtualHost有特定
#           需求时，可以在VirtualHost定义中再单独设置(override)。
#           这个文件通用于各个服务器，通常不用修改。
#
# 测试环境：CentOS Stream 9, Apache httpd 2.4.57
# 文件路径：/etc/httpd/conf.d/zz0-common.conf
#----------------------------------------------------------------------

# 定义全局primary host的ServerName（通常可在后面的配置文件中override）。
# 通常定义为Linux系统的hostname：
ServerName localhost

# 性能参数：
# Timeout 60            # 使用默认值
# KeepAlive On          # 使用默认值
# KeepAliveTimeout 5    # 使用默认值
MaxKeepAliveRequests 500

# 如果有自定义mime类型，在这里设置：
<IfModule mime_module>
    # 早些年间，IE浏览器会把.rar类型文件视为text/html，需自己定义（现在不必了）：
    #AddType application/rar .rar

    # 禁用SSI：
    RemoveType .shtml
    RemoveOutputFilter shtml
</IfModule>

# 设置逆向代理：
<IfModule mod_proxy.c>
    <IfModule mod_ssl.c>
        SSLProxyEngine on
    </IfModule>

    ProxyRequests Off       # 关闭正向代理，重要！

    # 为on时，会把浏览器请求中的“Host:”行传给后端，否则是把ProxyPass中的hostname传给后端。
    # 默认off，此处全局改为on，以便向后端转发泛域名。VirtualHost有需求的再单独设为off
    ProxyPreserveHost On

    # 有的后端需要这些参数，nginx是自动设置的，Apache需要手工设置：
    RequestHeader set X-Forwarded-Proto expr=%{REQUEST_SCHEME}
    RequestHeader set X-Forwarded-SSL   expr=%{HTTPS}

    # 将后端的HTTP状态码返给浏览器
    ProxyErrorOverride Off

    <Proxy *>
        Require all granted
    </Proxy>
</IfModule>

# 仍然使用传统的压缩方法，不使用Google的brotli
# 压缩设置可以有两种方式，此处使用方式2：
<IfModule mod_deflate.c>
  DeflateCompressionLevel 7

  # 方式1: 默认都压缩，排除如下类型:
  #SetOutputFilter DEFLATE
  #SetEnvIfNoCase Request_URI .(?:gif|jpe?g|png)$ no-gzip dont-vary
  #SetEnvIfNoCase Request_URI .(?:docx|xlsx|pptx)$ no-gzip dont-vary
  #SetEnvIfNoCase Request_URI .(?:7z|t?gz|zip|bz2|sit|rar|cab|arj|lzh|ace|uc2|war)$ no-gzip dont-vary
  #SetEnvIfNoCase Request_URI .(?:pdf|mov|avi|mp3|mp4|rm)$ no-gzip dont-vary

  # 方式2: 仅对如下类型压缩：
  AddOutputFilterByType DEFLATE text/html text/markdown text/plain
  AddOutputFilterByType DEFLATE text/css text/xml text/csv text/csv-schema
  AddOutputFilterByType DEFLATE text/directory text/dns text/parameters text/rfc822-headers text/richtext text/rtf text/tab-separated-values text/uri-list text/vcard

  AddOutputFilterByType DEFLATE application/javascript
  AddOutputFilterByType DEFLATE application/json
  AddOutputFilterByType DEFLATE application/msword application/vnd.ms-excel application/vnd.ms-powerpoint application/vnd.ms-project
  AddOutputFilterByType DEFLATE application/xml application/xhtml+xml

  AddOutputFilterByType DEFLATE image/bmp image/svg+xml
  AddOutputFilterByType DEFLATE message/rfc822

  AddOutputFilterByType DEFLATE multipart/form-data multipart/header-set
</IfModule>

# 设置Expires：
<IfModule mod_expires.c>
    ExpiresActive On
    ExpiresDefault "access 1 hour"

    ExpiresByType text/html  "modification 1 day"
    ExpiresByType text/plain "modification 30 days"
    ExpiresByType image/jpeg "modification 30 days"
    ExpiresByType image/png  "modification 30 days"
    ExpiresByType image/gif  "modification 30 days"
    ExpiresByType image/vnd.microsoft.icon "modification 30 days"
</IfModule>

<IfModule mod_ssl.c>
    SSLStrictSNIVHostCheck on    # 禁止非SNI浏览器访问
</IfModule>

# 去掉全局默认primary host的"Indexes"选项（安装包httpd.conf中有配置）：
<Directory "/var/www/html">
   Options None
   AllowOverride None
   Require all granted
</Directory>

# 关闭cgi-bin目录的访问（安装包httpd.conf中有配置）：
<Directory "/var/www/cgi-bin">
    AllowOverride None
    Require all denied
</Directory>

# 定义一个全局default virtual host返回404，防止用户访问到全局默认primary host，以满足网站备案合规要求：
<VirtualHost _default_:*>
    RewriteEngine on
    RewriteRule (.*) - [forbidden]
</VirtualHost>

# ---------------------------以下是常用宏定义-------------------------

# HTTP转HTTPS：
<Macro http2https>
    RewriteEngine on
    # 满足certbot申请/更新SSL证书：
    RewriteCond %{REQUEST_URI} !^/\.well-known/acme-challenge/
    RewriteRule (.*) "https://%{SERVER_NAME}%{REQUEST_URI}" [L,R=301]
</Macro>

# 符合正则表达式条件的URI，HTTP转HTTPS：
<Macro http2https_uri $uri_reg>
    RewriteEngine on
    RewriteCond %{REQUEST_URI} $uri_reg
    RewriteRule (.*) "https://%{SERVER_NAME}%{REQUEST_URI}" [L,R=301]
</Macro>

# ProxyPass根：
<Macro ProxyPassRoot $ThisHost $RemoteHost $port>
    ProxyPass        "/" "http://$RemoteHost:$port/"
    ProxyPassReverse "/" "http://$RemoteHost:$port/"
    ProxyPassReverseCookieDomain "$RemoteHost" "$ThisHost"
</Macro>

# ProxyPass根+websockets：
<Macro ProxyPassRootWs $ThisHost $RemoteHost $port>
    Use ProxyPassRoot $ThisHost $RemoteHost $port
    RewriteEngine on
    RewriteCond %{HTTP:Upgrade} websocket [NC]
    RewriteCond %{HTTP:Connection} upgrade [NC]
    RewriteRule ^/?(.*) "ws://$RemoteHost:$port/$1" [P,L]
</Macro>

# ProxyPass目录：
<Macro ProxyPassPath $ThisHost $RemoteHost $port $ThisPath $RemotePath>
    ProxyPass        "$ThisPath" "http://$RemoteHost:$port$RemotePath"
    ProxyPassReverse "$ThisPath" "http://$RemoteHost:$port$RemotePath"
    ProxyPassReverseCookieDomain "$RemoteHost" "$ThisHost"
    ProxyPassReverseCookiePath   "$RemotePath" "$ThisPath"
</Macro>

# ProxyPass目录+websockets：
<Macro ProxyPassPathWs $ThisHost $RemoteHost $port $ThisPath $RemotePath>
    Use ProxyPassPath $ThisHost $RemoteHost $port $ThisPath $RemotePath
    RewriteEngine on
    RewriteCond %{HTTP:Upgrade} websocket [NC]
    RewriteCond %{HTTP:Connection} upgrade [NC]
    RewriteRule (.*) "ws://$RemoteHost:$port$RemotePath" [P,L]
</Macro>

# 非SSL Virtual Host：
<Macro VHost $svrname $port>
    ErrorLog    logs/error-$port.log
    TransferLog logs/access-$port.log
    <IfDefine !PrimaryVHost>
        ServerName $svrname:$port
        ErrorLog    logs/$svrname-$port_error.log
        TransferLog logs/$svrname-$port_access.log
    </IfDefine>
    # 满足certbot申请/更新SSL证书：
    ProxyPass  /.well-known/acme-challenge/ !
</Macro>

# SSL Virtual Host（从安装包的ssl.conf文件中搬过来稍作修改的）：
<Macro SSLVHost $svrname $port>
    ErrorLog    logs/error-$port.log
    TransferLog logs/access-$port.log
    <IfDefine !PrimaryVHost>
        ServerName $svrname:$port

        SSLCertificateFile    /etc/letsencrypt/live/$svrname/fullchain.pem
        SSLCertificateKeyFile /etc/letsencrypt/live/$svrname/privkey.pem

        ErrorLog    logs/$svrname-$port_error.log
        TransferLog logs/$svrname-$port_access.log
        CustomLog   logs/$svrname-$port_request.log "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"
    </IfDefine>

    LogLevel warn

    SSLEngine on

    # 为安全起见，要求TLS最低版本1.2、仅接受强加密算法；但一些早期应用可能需要更低版本，可在特定<Virtual Host>里重新定义
    SSLProtocol      all -SSLv2 -SSLv3 -TLSv1 -TLSv1.1
    SSLProxyProtocol all -SSLv2 -SSLv3 -TLSv1 -TLSv1.1
    SSLCipherSuite ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256

    SSLHonorCipherOrder on

    SSLCipherSuite PROFILE=SYSTEM
    SSLProxyCipherSuite PROFILE=SYSTEM

    <FilesMatch "\.(cgi|shtml|phtml|php)$">
        SSLOptions +StdEnvVars
    </FilesMatch>
    <Directory "/var/www/cgi-bin">
        SSLOptions +StdEnvVars
    </Directory>

    BrowserMatch "MSIE [2-5]" \
         nokeepalive ssl-unclean-shutdown \
         downgrade-1.0 force-response-1.0
</Macro>
# ----------------------------常用宏定义结束-----------------------------
