# httpd主网站配置文件，2024-07-04
#
# 版权所有：Copyright (C) 2024, Martin Young <martin_young@live.cn>
#
# 功能说明：为一个Apache httpd定义所有需使用的端口的primary virtual host。
#           这个文件特定于一个服务器，应根据实际情况进行修改。
#
# 测试环境：CentOS Stream 9, Apache httpd 2.4.57
# 文件路径：/etc/httpd/conf.d/zz1-domains.conf
#------------------------------------------------------------------------

# 模块配置目录conf.modules.d下的配置文件都经过了修改，仅加载基本功能模块。
# 当本httpd服务器需要使用特定功能模块时，可以在这里加载。例如：
#
# 当需要PAM认证功能时：
# 先安装PAM认证模块：dnf install mod_authnz_pam
#LoadModule authn_core_module modules/mod_authn_core.so
#LoadModule authn_socache_module modules/mod_authn_socache.so
#LoadModule auth_basic_module modules/mod_auth_basic.so
#LoadModule authz_user_module modules/mod_authz_user.so
#LoadModule authnz_pam_module modules/mod_authnz_pam.so
#
# 当需要流量限速功能时：
#LoadModule ratelimit_module modules/mod_ratelimit.so
#LoadModule env_module modules/mod_env.so
#
# 当需要FastCGI时（例如PHP 7/8）：
#LoadModule actions_module modules/mod_actions.so
#LoadModule env_module modules/mod_env.so
#LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so

# 当需要逆向代理websockets时：
#LoadModule proxy_wstunnel_module modules/mod_proxy_wstunnel.so

# 必要时，override全局变量。例如：
#ServerName  www
#ServerAdmin webmaster@foo.com

#----------------------定义各端口的primary virtual host-------------------

# 一个组织可能有许多网站域名，但是通常只运行一个主网站。在网站备案时，通常
# 将多个网站都做备案，并把辅助网站也解析到主网站上。这种方式，通常就把辅助
# 网站的访问直接301跳转到主网站；对于所有访问过来的未备案网站都返回404。
#
# 本模板文件使用的例子是：
#     主网站：www.foo.com
#     辅助网站：foo.com, foo.com.cn, www.foo.com.cn, bar.net, www.bar.net

# 主网站名，必须根据实际情况修改：
Define PrimaryVHost www.foo.com

<Macro SetPrimaryVHost>
    RewriteEngine on
    #RewriteCond %{HTTP_HOST}     ^foo\.com(\:|$)              [NC,OR]
    #RewriteCond %{HTTP_HOST}     ^(www\.|)foo\.com\.cn(\:|$)  [NC,OR]
    #RewriteCond %{HTTP_HOST}     ^(www\.|)bar\.net(\:|$)      [NC]
    #RewriteRule ^/(.*)           %{REQUEST_SCHEME}://${PrimaryVHost}/$1 [L,R=301]

    RewriteRule (.*)             - [forbidden]
</Macro>

<Macro DefinePrimaryVHost $port>
    <IfDefine !DefaultPort>
        Listen $port
    </IfDefine>
    <VirtualHost *:$port>
        Use VHost - $port
        Use SetPrimaryVHost
    </VirtualHost>
</Macro>

<Macro DefinePrimarySSLVHost $port>
    <IfDefine !DefaultPort>
        Listen $port
    </IfDefine>
    <VirtualHost *:$port>
        Use SSLVHost - $port
        Use SetPrimaryVHost
        # 为实现SNI，必须借用一个SSL证书：
        SSLCertificateFile    /etc/letsencrypt/live/${PrimaryVHost}/fullchain.pem
        SSLCertificateKeyFile /etc/letsencrypt/live/${PrimaryVHost}/privkey.pem
    </VirtualHost>
</Macro>

# 80和443端口在主配置文件中已经listen，需定义DefaultPort变量：
Define DefaultPort
Use DefinePrimaryVHost 80
#Use DefinePrimarySSLVHost 443
UnDefine DefaultPort

# 假设还使用了8080、8081端口的非SSL服务：
#Use DefinePrimaryVHost 8080
#Use DefinePrimaryVHost 8081

# 假设还使用了8443端口的SSL服务：
#Use DefinePrimarySSLVHost 8443

UnDefine PrimaryVHost

#--------------------各端口的primary virtual host定义结束-------------------

# 各域下的VirtualHost配置文件：
IncludeOptional domain-*/*.conf
